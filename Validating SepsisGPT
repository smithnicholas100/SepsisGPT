{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1svfRQ3bvg4TFk0RgHY9Z7BlOWutIgl2w","timestamp":1714254238377}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["###   FINAL PROJECT   ###\n","# Sampath Martha, Nick Smith, Joseph Walker\n","\n","# Macros\n","LLM_PROMPT = '. Does this patient most likely have sepsis? Reply only with a Yes or a No as your answer.'"],"metadata":{"id":"vwVT3KhUpP9X"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rrqXAg68Gp_y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714327071638,"user_tz":360,"elapsed":24092,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"62a63e66-48b3-4732-f365-3d50e67018b8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting openai\n","  Downloading openai-1.23.6-py3-none-any.whl (311 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m311.6/311.6 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from openai) (3.7.1)\n","Requirement already satisfied: distro<2,>=1.7.0 in /usr/lib/python3/dist-packages (from openai) (1.7.0)\n","Collecting httpx<1,>=0.23.0 (from openai)\n","  Downloading httpx-0.27.0-py3-none-any.whl (75 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.6/75.6 kB\u001b[0m \u001b[31m5.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pydantic<3,>=1.9.0 in /usr/local/lib/python3.10/dist-packages (from openai) (2.7.0)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from openai) (1.3.1)\n","Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.10/dist-packages (from openai) (4.66.2)\n","Requirement already satisfied: typing-extensions<5,>=4.7 in /usr/local/lib/python3.10/dist-packages (from openai) (4.11.0)\n","Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (3.7)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (1.2.1)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (2024.2.2)\n","Collecting httpcore==1.* (from httpx<1,>=0.23.0->openai)\n","  Downloading httpcore-1.0.5-py3-none-any.whl (77 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.9/77.9 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting h11<0.15,>=0.13 (from httpcore==1.*->httpx<1,>=0.23.0->openai)\n","  Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (0.6.0)\n","Requirement already satisfied: pydantic-core==2.18.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (2.18.1)\n","Installing collected packages: h11, httpcore, httpx, openai\n","Successfully installed h11-0.14.0 httpcore-1.0.5 httpx-0.27.0 openai-1.23.6\n"]}],"source":["\n","\n","# Installs\n","!pip install openai"]},{"cell_type":"code","source":["# Imports\n","from openai import AzureOpenAI\n","from google.colab import files\n","import pandas as pd\n","import json"],"metadata":{"id":"MPrg8_MXg_RY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h0fkVHSehyE7","executionInfo":{"status":"ok","timestamp":1714327101008,"user_tz":360,"elapsed":19988,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"93dc4001-895c-401b-d57a-2d75273f763a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["csv_file_path = '/content/drive/MyDrive/School/High-risk Project/Sepsis DataSet'\n","!ls '/content/drive/MyDrive/School/High-risk Project/Sepsis DataSet'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Kk7nk1ViCKU","executionInfo":{"status":"ok","timestamp":1714327107861,"user_tz":360,"elapsed":688,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"1e4b2451-2525-4621-df39-ed394304aeea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ADMISSIONS.csv\t\t\t\t  SEPSIS_POS_CHART_EVENTS_AGE_ABOVE_64.csv\n","clean_sepsis_neg.csv\t\t\t  SEPSIS_POS_CHART_EVENTS.csv\n","clean_sepsis_pos.csv\t\t\t  sepsis_positive_pivoted.csv\n","DIAGNOSES_ICD.csv\t\t\t  SEPSIS_POS_LAB_EVENTS_AGE_ABOVE_64-1714062992998.csv\n","Sepsis_Analysis.sql\t\t\t  SEPSIS_POS_LAB_EVENTS_AGE_ABOVE_64.csv\n","SEPSIS_NEG_CHART_EVENTS_AGE_ABOVE_64.csv  SEPSIS_POS_PAT_AGE.csv\n","SEPSIS_NEG_CHART_EVENTS.csv\t\t  test_data.csv\n","SEPSIS_NEG_LAB_EVENTS_AGE_ABOVE_64.csv\t  train_data.csv\n","SEPSIS_NEG_PAT_AGE.csv\t\t\t  validate_data.csv\n","sepsis_neg_pivoted.csv\n"]}]},{"cell_type":"code","source":["###   LOAD DATA   ###\n","validate = pd.read_csv(csv_file_path+'/validate_data.csv')\n","test  = pd.read_csv(csv_file_path+'/test_data.csv')"],"metadata":{"id":"rvNRTriKiF6Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train  = pd.read_csv(csv_file_path+'/train_data.csv')"],"metadata":{"id":"S3lMLUKImiuF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"O1GSgnCLmmLK","executionInfo":{"status":"ok","timestamp":1714330387439,"user_tz":360,"elapsed":226,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"b1988e82-ddc2-47bd-c67e-cd623de59b68"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0 Heart Rate Respiratory Rate (RR) Temperature (Fahrenheit)  \\\n","0             0   94.0 BPM              24.0 BPM              95.2 Deg. F   \n","1             1   82.0 BPM              16.0 BPM              97.1 Deg. F   \n","2             2  128.0 BPM              21.0 BPM              97.3 Deg. F   \n","3             3   99.0 BPM              36.0 BPM              98.6 Deg. F   \n","4             4   90.0 BPM              20.0 BPM              97.0 Deg. F   \n","..          ...        ...                   ...                      ...   \n","356         356   71.0 BPM              24.0 BPM              98.4 Deg. F   \n","357         357   68.0 BPM              13.0 BPM              98.2 Deg. F   \n","358         358   59.0 BPM              14.0 BPM              97.4 Deg. F   \n","359         359  108.0 BPM              28.0 BPM              95.8 Deg. F   \n","360         360   87.0 BPM              10.0 BPM              97.7 Deg. F   \n","\n","    White Blood Cells (cells/mm^3) target  \n","0                        14.7 K/uL    Yes  \n","1                         7.4 K/uL    Yes  \n","2                        18.9 K/uL    Yes  \n","3                        13.5 K/uL     No  \n","4                        11.4 K/uL    Yes  \n","..                             ...    ...  \n","356                       2.3 K/uL    Yes  \n","357                       5.7 K/uL     No  \n","358                      20.1 K/uL    Yes  \n","359                      10.3 K/uL    Yes  \n","360                       9.1 K/uL     No  \n","\n","[361 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-367685a7-c824-4c6a-b5ab-0dce2ad700a1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Heart Rate</th>\n","      <th>Respiratory Rate (RR)</th>\n","      <th>Temperature (Fahrenheit)</th>\n","      <th>White Blood Cells (cells/mm^3)</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>94.0 BPM</td>\n","      <td>24.0 BPM</td>\n","      <td>95.2 Deg. F</td>\n","      <td>14.7 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>82.0 BPM</td>\n","      <td>16.0 BPM</td>\n","      <td>97.1 Deg. F</td>\n","      <td>7.4 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>128.0 BPM</td>\n","      <td>21.0 BPM</td>\n","      <td>97.3 Deg. F</td>\n","      <td>18.9 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>99.0 BPM</td>\n","      <td>36.0 BPM</td>\n","      <td>98.6 Deg. F</td>\n","      <td>13.5 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>90.0 BPM</td>\n","      <td>20.0 BPM</td>\n","      <td>97.0 Deg. F</td>\n","      <td>11.4 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>356</th>\n","      <td>356</td>\n","      <td>71.0 BPM</td>\n","      <td>24.0 BPM</td>\n","      <td>98.4 Deg. F</td>\n","      <td>2.3 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>357</th>\n","      <td>357</td>\n","      <td>68.0 BPM</td>\n","      <td>13.0 BPM</td>\n","      <td>98.2 Deg. F</td>\n","      <td>5.7 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>358</th>\n","      <td>358</td>\n","      <td>59.0 BPM</td>\n","      <td>14.0 BPM</td>\n","      <td>97.4 Deg. F</td>\n","      <td>20.1 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>359</th>\n","      <td>359</td>\n","      <td>108.0 BPM</td>\n","      <td>28.0 BPM</td>\n","      <td>95.8 Deg. F</td>\n","      <td>10.3 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>360</th>\n","      <td>360</td>\n","      <td>87.0 BPM</td>\n","      <td>10.0 BPM</td>\n","      <td>97.7 Deg. F</td>\n","      <td>9.1 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>361 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-367685a7-c824-4c6a-b5ab-0dce2ad700a1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-367685a7-c824-4c6a-b5ab-0dce2ad700a1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-367685a7-c824-4c6a-b5ab-0dce2ad700a1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5cb7a84a-9590-45a4-ac9b-19bd81a58c2f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5cb7a84a-9590-45a4-ac9b-19bd81a58c2f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5cb7a84a-9590-45a4-ac9b-19bd81a58c2f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_eddc48de-0a51-4b33-b75d-babf18a561be\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_eddc48de-0a51-4b33-b75d-babf18a561be button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train","summary":"{\n  \"name\": \"train\",\n  \"rows\": 361,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": 0,\n        \"max\": 360,\n        \"num_unique_values\": 361,\n        \"samples\": [\n          163,\n          33,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 85,\n        \"samples\": [\n          \"117.0 BPM\",\n          \"94.0 BPM\",\n          \"162.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Respiratory Rate (RR)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"31.0 BPM\",\n          \"26.0 BPM\",\n          \"34.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature (Fahrenheit)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 102,\n        \"samples\": [\n          \"97.6 Deg. F\",\n          \"91.7 Deg. F\",\n          \"100.1 Deg. F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"White Blood Cells (cells/mm^3)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 200,\n        \"samples\": [\n          \"19.8 K/uL\",\n          \"15.3 K/uL\",\n          \"10.5 K/uL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["###   CONFIGURE GPT   ###\n","\n","file_path = \"/content/drive/MyDrive/School/Azure/azure_config.json\"\n","json_file = open(file_path)\n","config_details = json.load(json_file)\n","\n","# Assign variables from json file\n","API_KEY = config_details['AZURE_OPEN_API_KEY']\n","API_BASE = config_details['ENDPOINT']\n","API_VERSION = config_details['API_VERSION']\n","DEPLOYMENT_NAME = config_details['DEPLOYMENT_NAME']\n","GPT_MODEL_NAME = config_details['GPT_MODEL_NAME']\n","\n"],"metadata":{"id":"dMqXnANKvYZE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DEPLOYMENT_NAME"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"QF2Bu-P0j56r","executionInfo":{"status":"ok","timestamp":1714327147230,"user_tz":360,"elapsed":189,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"9bd8ca7a-ff27-4cd5-8148-f356aa896979"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'sepsisGPT'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["GPT_MODEL_NAME"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"65TwM0fNkNm-","executionInfo":{"status":"ok","timestamp":1714327151564,"user_tz":360,"elapsed":171,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"7afe7dd6-32ec-4e04-84b4-d5b8dae69aaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'gpt-35-turbo'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Create client\n","client = AzureOpenAI(\n"," api_key=API_KEY,\n"," api_version=API_VERSION,\n"," base_url=f\"{API_BASE}/openai/deployments/SepsisGPT\"\n",")"],"metadata":{"id":"IsEar4E8j4oF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["###   TEST GPT   ###\n","MESSAGES = [\n","        {\"role\": \"user\", \"content\": \"Hello World!\"},\n","    ]\n","\n","response = client.chat.completions.create(\n","  model='SepsisGPT',\n","  messages=MESSAGES\n",")\n","\n","response.choices[0].message.content"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"ecuBHOeObmSs","executionInfo":{"status":"ok","timestamp":1714330398305,"user_tz":360,"elapsed":482,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"d208c6ad-680f-4a45-e43e-1776398a7c7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Hello there! How can I assist you today?'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# ###   SINGLE SHOT TEST GPT   ###\n","\n","# # This patient is positive for sepsis. See what GPT says\n","# MESSAGES = [\n","#         {\"role\": \"user\", \"content\": \"In a single word, positive or negative, determine if the patient has sepsis. The patient age is 88. Their heart rate is 79.0 BPM. Their blood pressure is 114.0 mmHG. Their respitory rate is 12.0 BPM. Their temperature is 99.7 Deg. F. Their white blood cell count is 30.5 K/uL\"},\n","#     ]\n","\n","# response = client.chat.completions.create(\n","#   model=GPT_MODEL_NAME,\n","#   messages=MESSAGES\n","# )\n","\n","# print(response.choices[0].message.content)\n","\n","# # This patient is negative for sepsis. See what GPT says\n","# MESSAGES = [\n","#         {\"role\": \"user\", \"content\": \"In a single word, positive or negative, determine if the patient has sepsis. The patient age is 72. Their heart rate is 130.0 BPM. Their blood pressure is 130.0 mmHG. Their respitory rate is 24.0 BPM. Their temperature is 94.5 Deg. F. Their white blood cell count is 18.0 K/uL\"},\n","#     ]\n","\n","# response = client.chat.completions.create(\n","#   model=GPT_MODEL_NAME,\n","#   messages=MESSAGES\n","# )\n","\n","# print(response.choices[0].message.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tZqRQWJmM2zh","executionInfo":{"status":"ok","timestamp":1714251613311,"user_tz":240,"elapsed":15929,"user":{"displayName":"Joseph","userId":"18260011698149424046"}},"outputId":"8acde42d-d055-42c4-9a47-bc9451247dce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Positive.\n","positive\n"]}]},{"cell_type":"code","source":["###   STEP 3   ###\n","'Serialize DataFrames into LLM prompts'\n","\n","# Imports\n","from torch.utils.data import Dataset\n","from tqdm import tqdm\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import time"],"metadata":{"id":"7YuURFtltDxo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["validate"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"BzaBstVUmKVn","executionInfo":{"status":"ok","timestamp":1714330412075,"user_tz":360,"elapsed":212,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"2841f8f4-5102-4d5f-ff13-055dfb52be8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Unnamed: 0 Heart Rate Respiratory Rate (RR) Temperature (Fahrenheit)  \\\n","0            0   77.0 BPM              18.0 BPM              96.9 Deg. F   \n","1            1   81.0 BPM              24.0 BPM              98.9 Deg. F   \n","2            2   64.0 BPM              14.0 BPM             100.5 Deg. F   \n","3            3  109.0 BPM              12.0 BPM              98.1 Deg. F   \n","4            4   75.0 BPM              26.0 BPM              96.7 Deg. F   \n","..         ...        ...                   ...                      ...   \n","72          72   73.0 BPM              21.0 BPM              96.7 Deg. F   \n","73          73  112.0 BPM              19.0 BPM              98.0 Deg. F   \n","74          74   77.0 BPM              25.0 BPM              99.8 Deg. F   \n","75          75  104.0 BPM              16.0 BPM              99.8 Deg. F   \n","76          76   58.0 BPM              12.0 BPM              98.1 Deg. F   \n","\n","   White Blood Cells (cells/mm^3) target  \n","0                       13.3 K/uL    Yes  \n","1                        9.4 K/uL     No  \n","2                        9.1 K/uL     No  \n","3                        3.8 K/uL    Yes  \n","4                       20.0 K/uL     No  \n","..                            ...    ...  \n","72                      14.1 K/uL    Yes  \n","73                      38.7 K/uL    Yes  \n","74                      12.6 K/uL     No  \n","75                      16.7 K/uL    Yes  \n","76                       8.4 K/uL     No  \n","\n","[77 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6e460cd8-a825-41fa-a9e5-a513bd26e167\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Heart Rate</th>\n","      <th>Respiratory Rate (RR)</th>\n","      <th>Temperature (Fahrenheit)</th>\n","      <th>White Blood Cells (cells/mm^3)</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>77.0 BPM</td>\n","      <td>18.0 BPM</td>\n","      <td>96.9 Deg. F</td>\n","      <td>13.3 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>81.0 BPM</td>\n","      <td>24.0 BPM</td>\n","      <td>98.9 Deg. F</td>\n","      <td>9.4 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>64.0 BPM</td>\n","      <td>14.0 BPM</td>\n","      <td>100.5 Deg. F</td>\n","      <td>9.1 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>109.0 BPM</td>\n","      <td>12.0 BPM</td>\n","      <td>98.1 Deg. F</td>\n","      <td>3.8 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>75.0 BPM</td>\n","      <td>26.0 BPM</td>\n","      <td>96.7 Deg. F</td>\n","      <td>20.0 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>72</td>\n","      <td>73.0 BPM</td>\n","      <td>21.0 BPM</td>\n","      <td>96.7 Deg. F</td>\n","      <td>14.1 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>73</td>\n","      <td>112.0 BPM</td>\n","      <td>19.0 BPM</td>\n","      <td>98.0 Deg. F</td>\n","      <td>38.7 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>74</td>\n","      <td>77.0 BPM</td>\n","      <td>25.0 BPM</td>\n","      <td>99.8 Deg. F</td>\n","      <td>12.6 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>75</td>\n","      <td>104.0 BPM</td>\n","      <td>16.0 BPM</td>\n","      <td>99.8 Deg. F</td>\n","      <td>16.7 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>76</td>\n","      <td>58.0 BPM</td>\n","      <td>12.0 BPM</td>\n","      <td>98.1 Deg. F</td>\n","      <td>8.4 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>77 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e460cd8-a825-41fa-a9e5-a513bd26e167')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6e460cd8-a825-41fa-a9e5-a513bd26e167 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6e460cd8-a825-41fa-a9e5-a513bd26e167');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6c61356-f52c-4269-ac0b-a9cf66f0ab11\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6c61356-f52c-4269-ac0b-a9cf66f0ab11')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6c61356-f52c-4269-ac0b-a9cf66f0ab11 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ab6e78b8-6e8b-4a46-a30f-213a91a53377\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('validate')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ab6e78b8-6e8b-4a46-a30f-213a91a53377 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('validate');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"validate","summary":"{\n  \"name\": \"validate\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 0,\n        \"max\": 76,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          4,\n          35,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 49,\n        \"samples\": [\n          \"80.0 BPM\",\n          \"48.0 BPM\",\n          \"112.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Respiratory Rate (RR)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"19.0 BPM\",\n          \"98.0 BPM\",\n          \"18.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature (Fahrenheit)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 48,\n        \"samples\": [\n          \"96.0 Deg. F\",\n          \"98.5 Deg. F\",\n          \"94.4 Deg. F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"White Blood Cells (cells/mm^3)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"11.1 K/uL\",\n          \"6.2 K/uL\",\n          \"20.0 K/uL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"lsFfRyWpkwF5","executionInfo":{"status":"ok","timestamp":1714330419349,"user_tz":360,"elapsed":163,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"4079ccab-a360-48bc-ce0f-08280b6391db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0 Heart Rate Respiratory Rate (RR) Temperature (Fahrenheit)  \\\n","0           0   80.0 BPM              22.0 BPM              97.6 Deg. F   \n","1           1   82.0 BPM              24.0 BPM              97.4 Deg. F   \n","2           2   79.0 BPM              15.0 BPM              98.1 Deg. F   \n","3           3   93.0 BPM              11.0 BPM              98.4 Deg. F   \n","4           4  105.0 BPM              20.0 BPM              99.2 Deg. F   \n","\n","  White Blood Cells (cells/mm^3) target  \n","0                       9.7 K/uL     No  \n","1                      10.5 K/uL     No  \n","2                      16.5 K/uL    Yes  \n","3                      14.8 K/uL    Yes  \n","4                      15.2 K/uL    Yes  "],"text/html":["\n","  <div id=\"df-de6fc9de-0836-42f2-89f1-40407a26bcb9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Heart Rate</th>\n","      <th>Respiratory Rate (RR)</th>\n","      <th>Temperature (Fahrenheit)</th>\n","      <th>White Blood Cells (cells/mm^3)</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>80.0 BPM</td>\n","      <td>22.0 BPM</td>\n","      <td>97.6 Deg. F</td>\n","      <td>9.7 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>82.0 BPM</td>\n","      <td>24.0 BPM</td>\n","      <td>97.4 Deg. F</td>\n","      <td>10.5 K/uL</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>79.0 BPM</td>\n","      <td>15.0 BPM</td>\n","      <td>98.1 Deg. F</td>\n","      <td>16.5 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>93.0 BPM</td>\n","      <td>11.0 BPM</td>\n","      <td>98.4 Deg. F</td>\n","      <td>14.8 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>105.0 BPM</td>\n","      <td>20.0 BPM</td>\n","      <td>99.2 Deg. F</td>\n","      <td>15.2 K/uL</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de6fc9de-0836-42f2-89f1-40407a26bcb9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de6fc9de-0836-42f2-89f1-40407a26bcb9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de6fc9de-0836-42f2-89f1-40407a26bcb9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f00ce38-5ac0-41d6-914c-f55d036e5e88\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f00ce38-5ac0-41d6-914c-f55d036e5e88')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f00ce38-5ac0-41d6-914c-f55d036e5e88 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test","summary":"{\n  \"name\": \"test\",\n  \"rows\": 78,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 0,\n        \"max\": 77,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          33,\n          0,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Heart Rate\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 47,\n        \"samples\": [\n          \"71.0 BPM\",\n          \"72.0 BPM\",\n          \"114.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Respiratory Rate (RR)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"22.0 BPM\",\n          \"26.0 BPM\",\n          \"31.0 BPM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature (Fahrenheit)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 50,\n        \"samples\": [\n          \"97.5 Deg. F\",\n          \"98.5 Deg. F\",\n          \"98.7 Deg. F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"White Blood Cells (cells/mm^3)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"17.5 K/uL\",\n          \"7.8 K/uL\",\n          \"15.2 K/uL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["class patientData(object):\n","  'This class represents the patient data. It allows us to track for sepsis or not'\n","  def __init__(self, medicalData = '', sepsisBoolean = ''):\n","    self.medicalData = medicalData\n","    self.sepsisBoolean = sepsisBoolean\n","\n","# Create column information to pass to GPT\n","class ConditionsDataFrame(Dataset):\n","  def __init__(self, df):\n","      self.df = df\n","      self.patient = patientData()\n","\n","  def __len__(self):\n","      return len(self.df)\n","\n","  def __getitem__(self, index):\n","      column_names = [\n","          (\"Heart Rate\", \"The patient's heart rate is \"),\n","          # (\"Invasive Blood Pressure mean\", \", blood pressure mean is \"),\n","          (\"Respiratory Rate (RR)\", \", respiratory rate is \"),\n","          (\"Temperature (Fahrenheit)\", \", temperature is \"),\n","          (\"White Blood Cells (cells/mm^3)\", \", white blood cell count is \")\n","      ]\n","\n","      x_strs = [f\"{col_desc}{self.df.iloc[index][col]}\" for col, col_desc in column_names]\n","      x_str = ''.join(x_strs)\n","      x_str = x_str.replace('\\n', '')\n","      x_str = x_str+ LLM_PROMPT\n","\n","      return x_str"],"metadata":{"id":"zVvodXTJtQbV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["validate_ds = ConditionsDataFrame(validate)\n","validate_ds[0]"],"metadata":{"id":"84GqmEXPHome","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1714330428783,"user_tz":360,"elapsed":176,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"41484765-0ad8-4a86-b0f0-3472072405c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"The patient's heart rate is 77.0 BPM, respiratory rate is 18.0 BPM, temperature is 96.9 Deg. F, white blood cell count is 13.3 K/uL. Does this patient most likely have sepsis? Reply only with a Yes or a No as your answer.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["test_ds = ConditionsDataFrame(test)\n","test_ds[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"6juE8MWoxGvS","executionInfo":{"status":"ok","timestamp":1714330432404,"user_tz":360,"elapsed":217,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"fb71f292-3442-4209-a2fb-304c0bcdba7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"The patient's heart rate is 80.0 BPM, respiratory rate is 22.0 BPM, temperature is 97.6 Deg. F, white blood cell count is 9.7 K/uL. Does this patient most likely have sepsis? Reply only with a Yes or a No as your answer.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["results = []\n","for prompt in tqdm(validate_ds):\n","  response = client.chat.completions.create(\n","    model='SepsisGPT',\n","    messages=[\n","          {\"role\": \"user\", \"content\": prompt}\n","      ]\n","  )\n","  results.append(response.choices[0].message.content)\n","  time.sleep(0.5)"],"metadata":{"id":"FHQFZcynygfP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714330482531,"user_tz":360,"elapsed":47985,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"d095e6d9-6022-4abf-add0-7c665536a948"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 77/77 [00:47<00:00,  1.61it/s]\n"]}]},{"cell_type":"code","source":["test_results = []\n","for prompt in tqdm(test_ds):\n","  response = client.chat.completions.create(\n","    model='SepsisGPT',\n","    messages=[\n","          {\"role\": \"user\", \"content\": prompt}\n","      ]\n","  )\n","  test_results.append(response.choices[0].message.content)\n","  time.sleep(0.5)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"caQb_V4PJFXd","executionInfo":{"status":"ok","timestamp":1714330064474,"user_tz":360,"elapsed":48457,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"cf7b0060-40d0-496f-afb8-36408ba8f8ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 78/78 [00:48<00:00,  1.62it/s]\n"]}]},{"cell_type":"code","source":["results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RY_29z_TQ-OP","executionInfo":{"status":"ok","timestamp":1714330496802,"user_tz":360,"elapsed":196,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"855b6216-a50c-4a3a-8031-73c319762ff9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'Yes',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'Yes',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'No',\n"," 'Yes',\n"," 'No',\n"," 'Yes',\n"," 'No']"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["from sklearn.metrics import roc_auc_score, average_precision_score, RocCurveDisplay"],"metadata":{"id":"-87hj0AVrbUd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Convert strings to boolean values\n","boolean_results = [s.strip('.').lower() == 'yes' for s in results]\n","validate_pred = [1 if x else 0 for x in boolean_results]\n","\n","# Get list of ground truth targets\n","targets = list(validate['target'])\n","boolean_targets = [s.strip('.').lower() == 'yes' for s in targets]\n","validate_labels = [1 if x else 0 for x in boolean_targets]\n","\n","auroc = roc_auc_score(validate_labels, validate_pred)\n","auprc = average_precision_score(validate_labels, validate_pred)\n","print('\\nAUROC:', auroc, '\\nAUPRC', auprc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LQEm9DBQqFid","executionInfo":{"status":"ok","timestamp":1714333441229,"user_tz":360,"elapsed":174,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"4b31f2ad-f235-4680-d0ae-4c99da6f27e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","AUROC: 0.7128879892037786 \n","AUPRC 0.658840282524493\n"]}]},{"cell_type":"code","source":["# Convert strings to boolean values\n","boolean_results = [s.strip('.').lower() == 'yes' for s in test_results]\n","test_pred = [1 if x else 0 for x in boolean_results]\n","\n","# Get list of ground truth targets\n","targets = list(test['target'])\n","boolean_targets = [s.strip('.').lower() == 'yes' for s in targets]\n","test_labels = [1 if x else 0 for x in boolean_targets]\n","\n","auroc = roc_auc_score(test_labels, test_pred)\n","auprc = average_precision_score(test_labels, test_pred)\n","print('\\nAUROC:', auroc, '\\nAUPRC', auprc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NLfRxAOMyKu_","executionInfo":{"status":"ok","timestamp":1714332754526,"user_tz":360,"elapsed":192,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"60dcb987-69f3-44d8-e1f1-2cc8b1f70e21"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","AUROC: 0.7817460317460317 \n","AUPRC 0.7477887965692844\n"]}]},{"cell_type":"code","source":["def calculate_ppv(predictions, ground_truth):\n","    # Initialize counts for true positives and false positives\n","    true_positives = 0\n","    false_positives = 0\n","\n","    # Iterate through the predictions and ground truth\n","    for pred, truth in zip(predictions, ground_truth):\n","        if pred == 1 and truth == 1:\n","            true_positives += 1\n","        elif pred == 1 and truth == 0:\n","            false_positives += 1\n","\n","    # Calculate PPV\n","    if true_positives + false_positives == 0:\n","        return 0  # To avoid division by zero if there are no positive predictions\n","    else:\n","        ppv = true_positives / (true_positives + false_positives)\n","        return ppv\n","\n","\n","ppv = calculate_ppv(test_pred, test_labels)\n","print(\"Positive Predictive Value (PPV):\", ppv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rdxqWWdOMSfJ","executionInfo":{"status":"ok","timestamp":1714332787671,"user_tz":360,"elapsed":237,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"fc69c1da-f6e9-4c44-9a7c-304c5d387428"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Positive Predictive Value (PPV): 0.8048780487804879\n"]}]},{"cell_type":"code","source":["ppv = calculate_ppv(validate_pred, validate_labels)\n","print(\"Positive Predictive Value (PPV):\", ppv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CgXFfRU4PVU5","executionInfo":{"status":"ok","timestamp":1714333518097,"user_tz":360,"elapsed":182,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"1b57dde0-a524-4bc6-a1cd-8dc7037f49e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Positive Predictive Value (PPV): 0.7666666666666667\n"]}]},{"cell_type":"code","source":["def calculate_npv(predictions, ground_truth):\n","    # Initialize counts for true negatives and false negatives\n","    true_negatives = 0\n","    false_negatives = 0\n","\n","    # Iterate through the predictions and ground truth\n","    for pred, truth in zip(predictions, ground_truth):\n","        if pred == 0 and truth == 0:\n","            true_negatives += 1\n","        elif pred == 0 and truth == 1:\n","            false_negatives += 1\n","\n","    # Calculate NPV\n","    if true_negatives + false_negatives == 0:\n","        return 0  # To avoid division by zero if there are no negative predictions\n","    else:\n","        npv = true_negatives / (true_negatives + false_negatives)\n","        return npv\n","\n","\n","npv = calculate_npv(test_pred, test_labels)\n","print(\"Negative Predictive Value (NPV):\", npv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5IKIZ6CNMqKA","executionInfo":{"status":"ok","timestamp":1714332896404,"user_tz":360,"elapsed":219,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"43fcfefa-58cf-4e67-be82-de68711f61b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Negative Predictive Value (NPV): 0.7567567567567568\n"]}]},{"cell_type":"code","source":["npv = calculate_npv(validate_pred, validate_labels)\n","print(\"Negative Predictive Value (NPV):\", npv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IWJY5rkkPINK","executionInfo":{"status":"ok","timestamp":1714333479908,"user_tz":360,"elapsed":197,"user":{"displayName":"Nick Smith","userId":"11100333351412359599"}},"outputId":"0ab89fac-ad04-413b-a2dc-c84a5029bd56"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Negative Predictive Value (NPV): 0.6808510638297872\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"kgP8WjwjPIAi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["###   STEP 4   ###\n","'Use prompts with few-shot clasification to train model. Then take the embeddings'"],"metadata":{"id":"nWljDx6Guh58","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1714184316747,"user_tz":240,"elapsed":3,"user":{"displayName":"Joseph","userId":"18260011698149424046"}},"outputId":"e4187167-eff1-4216-a737-7701b4180048"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Use prompts with few-shot clasification to train model. Then take the embeddings'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["\n","\n","\n","'''\n","#Python\n","Create a script that reads in the csv sepsis data, serializes it into json format, output to jsonl file.\n","\n","#### JSON FORMATTING\n","# This is how we want the user content to be formatted with delimeters\n","Age: 30 years - Number of times pregnant: 1 - Diastolic blood pressure: 64 mmHg - Triceps skin fold thickness: 32 mm - Plasma glucose concentration at 2 hours in an oral glucose tolerance test (GTT): 122 mg/dl - 2-hour serum insulin: 156 µU/ml - Body mass index: 35.1 - Diabetes pedigree function: 0.692. Does this patient have diabetes? Yes or no?\n","\n","# Assistant should respond boolean 'Yes' or 'No'\n","\n","#Question should be 'Does this patient have sepsis? Yes or no?'\n","\n","\n","\n","\n","\n","with open(\"training_set.jsonl\", 'w') as f:\n","    for item in test:\n","        f.write(json.dumps(item) + \"\\n\")\n","'''"],"metadata":{"id":"Ua3N4mXDurWh"},"execution_count":null,"outputs":[]}]}